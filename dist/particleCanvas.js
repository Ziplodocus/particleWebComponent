var j=Object.defineProperty;var P=Object.getOwnPropertySymbols;var A=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable;var E=(r,t,i)=>t in r?j(r,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):r[t]=i,g=(r,t)=>{for(var i in t||(t={}))A.call(t,i)&&E(r,i,t[i]);if(P)for(var i of P(t))I.call(t,i)&&E(r,i,t[i]);return r};const T=function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const s of document.querySelectorAll('link[rel="modulepreload"]'))e(s);new MutationObserver(s=>{for(const o of s)if(o.type==="childList")for(const n of o.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&e(n)}).observe(document,{childList:!0,subtree:!0});function i(s){const o={};return s.integrity&&(o.integrity=s.integrity),s.referrerpolicy&&(o.referrerPolicy=s.referrerpolicy),s.crossorigin==="use-credentials"?o.credentials="include":s.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function e(s){if(s.ep)return;s.ep=!0;const o=i(s);fetch(s.href,o)}};T();class l{constructor(t=l.randHex(),i=l.randHex(),e=l.randHex(),s=1){this._r=t,this._g=i,this._b=e,this._a=s}get r(){return this._r}get g(){return this._g}get b(){return this._b}get a(){return this._a}get rgba(){return`rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`}set r(t){this._r=t}set g(t){this._g=t}set b(t){this._b=t}set a(t){this._a=t}static avgColors(t){const i={r:0,g:0,b:0};t.forEach(e=>{for(let s in i)i[s]+=e[s]**2});for(let e in i)i[e]=Math.sqrt(i[e]/t.length);return new l(i.r,i.g,i.b)}static randHex(){return Math.round(Math.random()*255)}}class a{constructor(t=0,i=0){this.x=t,this.y=i}get norm(){return Math.sqrt(this.x**2+this.y**2)}copy(){return new a(this.x,this.y)}set(t,i){this.x=t,this.y=i}scale(t){this.x*=t,this.y*=t}adjust(t){this.x+=t.x,this.y+=t.y}perp(){return new a(-this.y,this.x)}mult(t){return new a(this.x*t,this.y*t)}dot(t){return this.x*t.x+this.y*t.y}add(t){return new a(this.x+t.x,this.y+t.y)}minus(t){return this.add(t.mult(-1))}getUnit(){return this.mult(1/this.norm)}}const b=Math.PI,D=()=>2*b*Math.random(),U=()=>{const r=D();return new a(Math.cos(r),Math.sin(r))};class S{constructor(){this.events={}}on(t,i){const e=this.events[t];e?e.push(i):this.events[t]=[i]}trigger(t,i){const e=this.events[t];e&&e.forEach(s=>s(i))}off(t,i){const e=this.events[t].indexOf(i);e!==-1&&this.events[t].splice(e,1)}}class V extends S{constructor(t,i,e){super();this.position=t,this.velocity=U().mult(i),this.color=new l,this.lineColor=new l,this.radius=e,this.move=()=>{this.position.adjust(this.velocity)},this.on("move",this.move),this.handleBoundCollision=s=>{s.direction==="horizontal"&&(this.vx*=-1,this.x+=s.adj),s.direction==="vertical"&&(this.vy*=-1,this.y+=s.adj)},this.on("boundsCollide",this.handleBoundCollision),this.handleCollision=s=>{this.velocity=s.v},this.on("collision",this.handleCollision)}get x(){return this.position.x}get y(){return this.position.y}get vx(){return this.velocity.x}get vy(){return this.velocity.y}get speed(){return this.velocity.norm}get direction(){return Math.acos(this.vx/this.speed)}get mass(){return 4/3*b*this.radius**3}set x(t){this.position.x=t}set y(t){this.position.y=t}set vx(t){this.velocity.x=t}set vy(t){this.velocity.y=t}}class B extends S{constructor(t,i,e){super();const s={minSpeed:.2,maxSpeed:.5,minRadius:3,maxRadius:5,initialParticles:10,vicinity:50};this.particles=[],this.options=g(g({},s),t),this.bounds={x:i,y:e};for(let o=this.options.initialParticles;o>0;o--)this.add();this.forParticleInLoop=o=>{const n=o.details;this.checkParticleVicinity(n),this.checkForBoundsCollision(n),n.trigger("move")},this.on("incrementTime",this.forParticleInLoop)}checkForBoundsCollision(t){const i=t.x-t.radius<=0,e=t.x+t.radius>=this.bounds.x,s=t.y-t.radius<=0,o=t.y+t.radius>=this.bounds.y;(i||e)&&t.trigger("boundsCollide",{direction:"horizontal",adj:i?t.radius-t.x:this.bounds.x-t.x-t.radius}),(o||s)&&t.trigger("boundsCollide",{direction:"vertical",adj:s?t.radius-t.y:this.bounds.y-t.y-t.radius})}checkParticleVicinity(t){this.particles.indexOf(t),this.particles.forEach(i=>{if(t==i)return;const e=t.position.minus(i.position),s=e.norm;if(s<=this.options.vicinity)this.trigger("inVicinity",{p:t,q:i});else return;const n=t.radius+i.radius,x=s<n,h=s<=n,c=h&&e.getUnit(),p=h&&e.perp().getUnit();if(x){const d=n-s,u=t.radius/n,m=c.mult((1-u)*d);t.position.adjust(m);const y=c.mult(u*-d);i.position.adjust(y)}if(h){const d=t.velocity.dot(c),u=i.velocity.dot(c),m=t.velocity.dot(p),y=i.velocity.dot(p),C=t.mass+i.mass,M=(i.mass*(u-d)+t.mass*d+i.mass*u)/C,w=(t.mass*(d-u)+t.mass*d+i.mass*u)/C,f=new a(1,0),v=new a(0,1),R=c.mult(M).dot(f)+p.mult(m).dot(f),O=c.mult(M).dot(v)+p.mult(m).dot(v),k=c.mult(w).dot(f)+p.mult(y).dot(f),H=c.mult(w).dot(v)+p.mult(y).dot(v),L=new a(R,O),z=new a(k,H);t.trigger("collision",{v:L}),i.trigger("collision",{v:z})}})}randomPosition(){const t=Math.random()*(this.bounds.x-2*this.options.maxRadius)+this.options.maxRadius,i=Math.random()*(this.bounds.y-2*this.options.maxRadius)+this.options.maxRadius;return new a(t,i)}randomSpeed(){const t=this.options;return Math.random()*(t.maxSpeed-t.minSpeed)+t.minSpeed}add(t=this.randomPosition()){const i=this.randomSpeed(),e=this.options.minRadius+(this.options.maxRadius-this.options.minRadius)*((i-this.options.minSpeed)/(this.options.maxSpeed-this.options.minSpeed+1e-6));this.particles.push(new V(t,i,e))}}class F extends HTMLCanvasElement{constructor(){super();const t={fillOpacity:.5,edgeOpacity:1,mouseEdge:!0,fill:!0,fillColor:!1,outline:!1,outlineColor:!1,edges:!0,pixelDensity:1},i=JSON.parse(this.getAttribute("data-canvas-options")),e=JSON.parse(this.getAttribute("data-particle-options"));this.options=g(g({},t),i),this.width=this.computedStyle("width").replace("px","")*this.options.pixelDensity,this.height=this.computedStyle("height").replace("px","")*this.options.pixelDensity,this.bounds=this.getBoundingClientRect(),this.ctx=this.getContext("2d"),this.ctx.lineCap="round",this.particleManager=new B(e,this.width,this.height),this.mousePosition=new a,new ResizeObserver(this.createResizeHandler()).observe(this),this.addEventListener("optionChange",this.handleOptionChange),this.addEventListener("resize",this.createResizeHandler(),{passive:!0}),this.addEventListener("mouseenter",this.createMouseEnterHandler()),this.addEventListener("mousemove",this.createHoverHandler(),{passive:!0}),this.addEventListener("mouseleave",this.createMouseLeaveHandler()),this.particleManager.on("inVicinity",this.createInVicinityHandler()),this.addEventListener("click",n=>{this.particleManager.add(this.mousePosition.copy())});const o=()=>{this.setUpParticleRendering(),this.particleManager.particles.forEach(n=>{this.particleManager.trigger("incrementTime",{details:n})}),this.particleManager.particles.forEach(n=>{this.renderParticle(n)}),this.renderMouseEdges(),requestAnimationFrame(o)};o()}get area(){return this.width*this.height}createResizeHandler(){let t;return i=>{i.forEach(e=>{this===e.target&&(clearTimeout(t),t=setTimeout(this.createResizer(),200))})}}createHoverHandler(){return t=>{requestAnimationFrame(()=>{const i=this.options.pixelDensity;this.mousePosition.set(t.offsetX*i,t.offsetY*i)})}}createMouseEnterHandler(){return()=>{this.mousePosition.active=!0}}createMouseLeaveHandler(){return()=>{this.mousePosition.active=!1}}createInVicinityHandler(){return t=>{this.options.edges&&this.renderEdge(t.p,t.q)}}refresh(){this.width=this.computedStyle("width").replace("px","")*this.options.pixelDensity,this.height=this.computedStyle("height").replace("px","")*this.options.pixelDensity,this.bounds=this.getBoundingClientRect()}createResizer(){return()=>{const t={width:this.width,height:this.height,area:this.area};this.refresh();const i=this.area/t.area;this.particleManager.options.vicinity*=i**.5,this.particleManager.particles.forEach(e=>{e.position.set(e.x*(this.width/t.width),e.y*(this.height/t.height))}),this.particleManager.bounds.x=this.width,this.particleManager.bounds.y=this.height,this.height=Math.floor(this.options.pixelDensity*this.height),this.width=Math.floor(this.options.pixelDensity*this.width)}}setUpParticleRendering(){this.ctx.clearRect(0,0,this.width,this.height)}renderParticle(t){const i=this.ctx,e=this.options;(e.fill||e.outline)&&(i.beginPath(),i.arc(t.x,t.y,t.radius,0,2*b)),e.fill&&(i.fillStyle=e.fillColor||t.color.rgba,i.fill()),e.outline&&(i.strokeStyle=e.outlineColor||t.lineColor.rgba,i.lineWidth=t.radius/3,i.stroke())}renderEdge(t,i){const e=this.ctx,o=t.position.minus(i.position).norm,n=this.options.edgeOpacity-o/(this.particleManager.options.vicinity/this.options.edgeOpacity),x=t.radius+i.radius;let h="";switch(!0){case this.options.outlineColor:h=this.options.outlineColor;break;case this.options.outline:h=l.avgColors([t.lineColor,i.lineColor]).rgba;break;case this.options.fillColor:h=this.options.fillColor;break;default:h=l.avgColors([t.color,i.color]).rgba}e.strokeStyle=h,e.globalAlpha=n,e.lineWidth=x/5,e.beginPath(),e.moveTo(t.x,t.y),e.lineTo(i.x,i.y),e.stroke(),e.globalAlpha=1}renderMouseEdges(){!this.mousePosition.active||this.particleManager.particles.forEach(t=>{const i=t.position.minus(this.mousePosition).norm;if(i>this.particleManager.options.vicinity*1.5)return;const e=this.options.edgeOpacity-i/(this.particleManager.options.vicinity*1.5/this.options.edgeOpacity);let s="";switch(!0){case this.options.outlineColor:s=this.options.outlineColor;break;case this.options.outline:s=t.lineColor.rgba;break;case this.options.fillColor:s=this.options.fillColor;break;default:s=t.color.rgba}const o=this.ctx;o.strokeStyle=s,o.globalAlpha=e,o.lineWidth=t.radius*.8,o.beginPath(),o.moveTo(t.x,t.y),o.lineTo(this.mousePosition.x,this.mousePosition.y),o.stroke(),o.globalAlpha=1})}computedStyle(t){return getComputedStyle(this).getPropertyValue(t)}}window.customElements.define("particle-canvas",F,{extends:"canvas"});
//# sourceMappingURL=particleCanvas.js.map
